name: test, coverage, build, docker, openapi publish on push

on:
  pull_request:
  push:
  workflow_dispatch:

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  {%- if github_ci_tests %}
  test:
    name: test with ${{ matrix.py }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.10"
        os:
          - ubuntu-latest
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: openg2p
          POSTGRES_PASSWORD: openg2p
          POSTGRES_DB: openg2p
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
      - name: Install tox
        run: python -m pip install tox-gh>=1.2
      - name: Setup test suite
        run: tox -vv --notest
      - name: Run test suite
        run: tox --skip-pkg-install
      {%- if github_ci_tests_codecov %}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
      {%- endif %}
  {%- endif %}
  {%- if github_ci_docker_build %}
  docker-build:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    {%- if github_ci_tests %}
    needs: test
    {%- endif %}
    if: github.event_name != 'pull_request'
    env:
      NAMESPACE: ${{ secrets.docker_hub_organisation }}
      SERVICE_NAME: {{ package_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Docker build and push
        run: |
          echo "${{ secrets.docker_hub_token }}" | docker login -u ${{ secrets.docker_hub_actor }} --password-stdin
          if [ $? -ne 0 ];then
            echo "::error::Failed to Login to dockerhub"
            exit 1;
          fi

          IMAGE_ID=$NAMESPACE/$SERVICE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$BRANCH_NAME
          if [[ $BRANCH_NAME == master || $BRANCH_NAME == main ]]; then
            VERSION=develop
          fi
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker build . \
            --file Dockerfile \
            --tag $IMAGE_ID:$VERSION

          docker push $IMAGE_ID:$VERSION
  {%- endif %}
  {%- if github_ci_openapi_publish %}
  openapi-publish:
    name: OpenAPI Generate and Publish
    runs-on: ubuntu-latest
    {%- if github_ci_tests %}
    needs: test
    {%- endif %}
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Get branch name (merge)
        echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
      - name: Setup python for openapi generate
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install app
        run: python -m pip install .
      - name: Generate openapi json
        run: |
          mkdir -p api-docs/generated
          python -m {{ module_name }} getOpenAPI api-docs/generated/openapi.json
          if ! [ -z "$(git status --porcelain=v1 2>/dev/null -- api-docs/generated/openapi.json)" ]; then
            export OPENAPI_CHANGED="true"
            echo OPENAPI_CHANGED=$OPENAPI_CHANGED >> $GITHUB_ENV
          fi
      - name: Commit Changes
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: "Generated new openapi.json on push to ${{ github.event.inputs.git-ref }}"
          add: "api-docs/generated/openapi.json"
      - name: Setup nodejs
        uses: actions/setup-node@v2
        if: env.OPENAPI_CHANGED == "true"
        with:
          node-version: '14'
      - name: Publish to stoplight
        if: env.OPENAPI_CHANGED == "true"
        run: |
          npx @stoplight/cli@5 push --ci-token ${{ env.STOPLIGHT_PROJECT_TOKEN }} --url https://openg2p.stoplight.io --branch ${{ env.BRANCH_NAME }} --directory api-docs/generated
  {%- endif %}
